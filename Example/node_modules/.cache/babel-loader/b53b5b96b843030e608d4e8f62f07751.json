{"ast":null,"code":"import _classCallCheck from \"/Users/pontusmac/Documents/GitHub/pushnotifications-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pontusmac/Documents/GitHub/pushnotifications-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pontusmac/Documents/GitHub/pushnotifications-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pontusmac/Documents/GitHub/pushnotifications-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pontusmac/Documents/GitHub/pushnotifications-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport firebase from \"firebase\";\n\nvar InitNotifications =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InitNotifications, _React$Component);\n\n  function InitNotifications(props) {\n    _classCallCheck(this, InitNotifications);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InitNotifications).call(this, props));\n  }\n\n  _createClass(InitNotifications, [{\n    key: \"render\",\n    value: function render() {\n      if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.register('../firebase-messaging-sw.js').then(function (registration) {\n          console.log('Registration successful, scope is:', registration.scope);\n        }).catch(function (err) {\n          console.log('Service worker registration failed, error:', err);\n        });\n      }\n\n      var messaging = firebase.messaging();\n      messaging.requestPermission().then(function () {\n        console.log(\"Permission granted: \", messaging.getToken());\n        return messaging.getToken();\n      }).then(function (token) {\n        console.log(\"FCM Token:\", token);\n      }).catch(function (error) {\n        if (error.code === \"messaging/permission-blocked\") {\n          console.log(\"Notifications blocked, please enable\");\n        } else {\n          console.log(\"Error\", error);\n        }\n      });\n      messaging.onMessage(function (payload) {\n        console.log(\"Notification Received\", payload); //this is the function that gets triggered when you receive a \n        //push notification while you’re on the page. So you can \n        //create a corresponding UI for you to have the push \n        //notification handled. \n\n        navigator.serviceWorker.ready.then(function (registration) {\n          registration.showNotification('Web-notis-firebase', {\n            body: 'Pontus är bäst!',\n            icon: '../logo.svg',\n            tag: 'Web-notis-test'\n          });\n        });\n      });\n    }\n  }]);\n\n  return InitNotifications;\n}(React.Component);\n\nmodule.exports = InitNotifications;","map":{"version":3,"sources":["/Users/pontusmac/Documents/GitHub/pushnotifications-React/src/initNotification.js"],"names":["firebase","InitNotifications","props","navigator","serviceWorker","register","then","registration","console","log","scope","catch","err","messaging","requestPermission","getToken","token","error","code","onMessage","payload","ready","showNotification","body","icon","tag","React","Component","module","exports"],"mappings":";;;;;AAAA,OAAOA,QAAP,MAAqB,UAArB;;IAEMC,iB;;;;;AACJ,6BAAYC,KAAZ,EAAkB;AAAA;;AAAA,0FACVA,KADU;AAEjB;;;;6BAEO;AAEN,UAAI,mBAAmBC,SAAvB,EAAkC;AAChCA,QAAAA,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiC,6BAAjC,EACCC,IADD,CACM,UAASC,YAAT,EAAuB;AAC3BC,UAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDF,YAAY,CAACG,KAA/D;AACD,SAHD,EAGGC,KAHH,CAGS,UAASC,GAAT,EAAc;AACrBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DG,GAA1D;AACD,SALD;AAMD;;AAED,UAAMC,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AACAA,MAAAA,SAAS,CACLC,iBADJ,GAEIR,IAFJ,CAES,YAAM;AACTE,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCI,SAAS,CAACE,QAAV,EAApC;AACA,eAAOF,SAAS,CAACE,QAAV,EAAP;AACD,OALL,EAMIT,IANJ,CAMS,UAAAU,KAAK,EAAI;AACZR,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BO,KAA1B;AACD,OARL,EASIL,KATJ,CASU,UAAAM,KAAK,EAAI;AACb,YAAIA,KAAK,CAACC,IAAN,KAAe,8BAAnB,EAAmD;AAChDV,UAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACF,SAFD,MAEO;AACJD,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB;AACF;AACD,OAfN;AAiBAJ,MAAAA,SAAS,CAACM,SAAV,CAAoB,UAAAC,OAAO,EAAI;AAC9BZ,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCW,OAArC,EAD8B,CAE9B;AACA;AACA;AACA;;AACAjB,QAAAA,SAAS,CAACC,aAAV,CAAwBiB,KAAxB,CAA8Bf,IAA9B,CAAmC,UAASC,YAAT,EAAuB;AACxDA,UAAAA,YAAY,CAACe,gBAAb,CAA8B,oBAA9B,EAAoD;AAClDC,YAAAA,IAAI,EAAE,iBAD4C;AAElDC,YAAAA,IAAI,EAAE,aAF4C;AAGlDC,YAAAA,GAAG,EAAE;AAH6C,WAApD;AAKD,SAND;AAOD,OAbA;AAcD;;;;EAhD6BC,KAAK,CAACC,S;;AAoDtCC,MAAM,CAACC,OAAP,GAAiB5B,iBAAjB","sourcesContent":["import firebase from \"firebase\";\n\nclass InitNotifications extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  \n  render(){\n\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('../firebase-messaging-sw.js')\n      .then(function(registration) {\n        console.log('Registration successful, scope is:', registration.scope);\n      }).catch(function(err) {\n        console.log('Service worker registration failed, error:', err);\n      });\n    }\n\n    const messaging = firebase.messaging();\n    messaging\n       .requestPermission()\n       .then(() => {\n          console.log(\"Permission granted: \", messaging.getToken())\n          return messaging.getToken();\n        })\n       .then(token => {\n          console.log(\"FCM Token:\", token);\n        })\n       .catch(error => {\n          if (error.code === \"messaging/permission-blocked\") {\n             console.log(\"Notifications blocked, please enable\");\n          } else {\n             console.log(\"Error\", error);\n          }\n         }); \n \n    messaging.onMessage(payload => {\n     console.log(\"Notification Received\", payload);\n     //this is the function that gets triggered when you receive a \n     //push notification while you’re on the page. So you can \n     //create a corresponding UI for you to have the push \n     //notification handled. \n     navigator.serviceWorker.ready.then(function(registration) {\n       registration.showNotification('Web-notis-firebase', {\n         body: 'Pontus är bäst!',\n         icon: '../logo.svg', \n         tag: 'Web-notis-test'\n       }); \n     });\n   });\n  }\n   \n}\n\nmodule.exports = InitNotifications\n\n\n"]},"metadata":{},"sourceType":"module"}