{"ast":null,"code":"import firebase from \"firebase\";\nimport { config } from \"./push/firebaseConfig.jsx\";\nconsole.log(config);\nfirebase.initializeApp(config);\ninitNotif();\n\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('../firebase-messaging-sw.js').then(function (registration) {\n    console.log('Registration successful, scope is:', registration.scope);\n  }).catch(function (err) {\n    console.log('Service worker registration failed, error:', err);\n  });\n}\n\nfunction initNotif() {\n  var messaging = firebase.messaging();\n  messaging.requestPermission().then(function () {\n    console.log(\"Permission granted: \", messaging.getToken());\n    return messaging.getToken();\n  }).then(function (token) {\n    console.log(\"FCM Token:\", token);\n  }).catch(function (error) {\n    if (error.code === \"messaging/permission-blocked\") {\n      console.log(\"Notifications blocked, please enable\");\n    } else {\n      console.log(\"Error\", error);\n    }\n  });\n  messaging.onMessage(function (payload) {\n    console.log(\"Notification Received\", payload); //this is the function that gets triggered when you receive a \n    //push notification while you’re on the page. So you can \n    //create a corresponding UI for you to have the push \n    //notification handled.\n\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.showNotification('Web-notis-firebase', {\n        body: 'Pontus är bäst!',\n        icon: './logo.svg',\n        tag: 'Web-notis-test'\n      });\n    });\n  });\n}","map":{"version":3,"sources":["/Users/pontusmac/firebase-test/src/initNotification.js"],"names":["firebase","config","console","log","initializeApp","initNotif","navigator","serviceWorker","register","then","registration","scope","catch","err","messaging","requestPermission","getToken","token","error","code","onMessage","payload","ready","showNotification","body","icon","tag"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACAC,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAD,QAAQ,CAACI,aAAT,CAAuBH,MAAvB;AACAI,SAAS;;AAET,IAAI,mBAAmBC,SAAvB,EAAkC;AAC9BA,EAAAA,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiC,6BAAjC,EACCC,IADD,CACM,UAASC,YAAT,EAAuB;AAC3BR,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDO,YAAY,CAACC,KAA/D;AACD,GAHD,EAGGC,KAHH,CAGS,UAASC,GAAT,EAAc;AACrBX,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DU,GAA1D;AACD,GALD;AAMD;;AAEH,SAASR,SAAT,GAAqB;AAClB,MAAMS,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AACAA,EAAAA,SAAS,CACLC,iBADJ,GAEIN,IAFJ,CAES,YAAM;AACTP,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCW,SAAS,CAACE,QAAV,EAApC;AACA,WAAOF,SAAS,CAACE,QAAV,EAAP;AACD,GALL,EAMIP,IANJ,CAMS,UAAAQ,KAAK,EAAI;AACZf,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bc,KAA1B;AACD,GARL,EASIL,KATJ,CASU,UAAAM,KAAK,EAAI;AACb,QAAIA,KAAK,CAACC,IAAN,KAAe,8BAAnB,EAAmD;AAChDjB,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACF,KAFD,MAEO;AACJD,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBe,KAArB;AACF;AACD,GAfN;AAiBDJ,EAAAA,SAAS,CAACM,SAAV,CAAoB,UAAAC,OAAO,EAAI;AAC7BnB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCkB,OAArC,EAD6B,CAE7B;AACA;AACA;AACA;;AACAf,IAAAA,SAAS,CAACC,aAAV,CAAwBe,KAAxB,CAA8Bb,IAA9B,CAAmC,UAASC,YAAT,EAAuB;AACxDA,MAAAA,YAAY,CAACa,gBAAb,CAA8B,oBAA9B,EAAoD;AAClDC,QAAAA,IAAI,EAAE,iBAD4C;AAElDC,QAAAA,IAAI,EAAE,YAF4C;AAGlDC,QAAAA,GAAG,EAAE;AAH6C,OAApD;AAKD,KAND;AAOD,GAbD;AAcD","sourcesContent":["import firebase from \"firebase\";\nimport { config } from \"./push/firebaseConfig.jsx\";\nconsole.log(config);\nfirebase.initializeApp(config);\ninitNotif();\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('../firebase-messaging-sw.js')\n    .then(function(registration) {\n      console.log('Registration successful, scope is:', registration.scope);\n    }).catch(function(err) {\n      console.log('Service worker registration failed, error:', err);\n    });\n  }\n\nfunction initNotif() {\n   const messaging = firebase.messaging();\n   messaging\n      .requestPermission()\n      .then(() => {\n         console.log(\"Permission granted: \", messaging.getToken())\n         return messaging.getToken();\n       })\n      .then(token => {\n         console.log(\"FCM Token:\", token);\n       })\n      .catch(error => {\n         if (error.code === \"messaging/permission-blocked\") {\n            console.log(\"Notifications blocked, please enable\");\n         } else {\n            console.log(\"Error\", error);\n         }\n        }); \n\n  messaging.onMessage(payload => {\n    console.log(\"Notification Received\", payload);\n    //this is the function that gets triggered when you receive a \n    //push notification while you’re on the page. So you can \n    //create a corresponding UI for you to have the push \n    //notification handled.\n    navigator.serviceWorker.ready.then(function(registration) {\n      registration.showNotification('Web-notis-firebase', {\n        body: 'Pontus är bäst!',\n        icon: './logo.svg', \n        tag: 'Web-notis-test'\n      }); \n    });\n  });\n}\n\n\n"]},"metadata":{},"sourceType":"module"}