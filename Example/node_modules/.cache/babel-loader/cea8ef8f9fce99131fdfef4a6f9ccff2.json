{"ast":null,"code":"import firebase from \"firebase\";\nexport function initNotif() {\n  var messaging = firebase.messaging();\n  messaging.requestPermission().then(function () {\n    console.log(\"Permission granted: \", messaging.getToken());\n    return messaging.getToken();\n  }).then(function (token) {\n    console.log(\"FCM Token:\", token);\n  }).catch(function (error) {\n    if (error.code === \"messaging/permission-blocked\") {\n      console.log(\"Notifications blocked, please enable\");\n    } else {\n      console.log(\"Error\", error);\n    }\n  });\n  messaging.onMessage(function (payload) {\n    console.log(\"Notification Received\", payload); //this is the function that gets triggered when you receive a \n    //push notification while you’re on the page. So you can \n    //create a corresponding UI for you to have the push \n    //notification handled.\n\n    /*navigator.serviceWorker.ready.then(function(registration) {\n      registration.showNotification('Web-notis-firebase', {\n        body: 'Pontus är bäst!',\n        icon: '../logo.svg', \n        tag: 'Web-notis-test'\n      }); \n    });*/\n  });\n}\nexport function showNotification() {\n  Notification.requestPermission(function (result) {\n    if (result === 'granted') {\n      navigator.serviceWorker.ready.then(function (registration) {\n        registration.showNotification('Vibration Sample', {\n          body: 'Buzz! Buzz!',\n          icon: '../images/touch/chrome-touch-icon-192x192.png',\n          vibrate: [200, 100, 200, 100, 200, 100, 200],\n          tag: 'vibration-sample'\n        });\n      });\n    }\n  });\n}\nexport function requestNotificationPermission() {\n  // Some browsers don't support Notification yet. I'm looking at you iOS Safari\n  if (\"Notification\" in window) {\n    if (Notification.permission !== \"denied\" && Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }\n}","map":{"version":3,"sources":["/Users/pontusmac/firebase-test/src/initNotification.js"],"names":["firebase","initNotif","messaging","requestPermission","then","console","log","getToken","token","catch","error","code","onMessage","payload","showNotification","Notification","result","navigator","serviceWorker","ready","registration","body","icon","vibrate","tag","requestNotificationPermission","window","permission"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAO,SAASC,SAAT,GAAqB;AACzB,MAAMC,SAAS,GAAGF,QAAQ,CAACE,SAAT,EAAlB;AACAA,EAAAA,SAAS,CACLC,iBADJ,GAEIC,IAFJ,CAES,YAAM;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,SAAS,CAACK,QAAV,EAApC;AACA,WAAOL,SAAS,CAACK,QAAV,EAAP;AACD,GALL,EAMIH,IANJ,CAMS,UAAAI,KAAK,EAAI;AACZH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,KAA1B;AACD,GARL,EASIC,KATJ,CASU,UAAAC,KAAK,EAAI;AACb,QAAIA,KAAK,CAACC,IAAN,KAAe,8BAAnB,EAAmD;AAChDN,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACF,KAFD,MAEO;AACJD,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,KAArB;AACF;AACD,GAfN;AAiBDR,EAAAA,SAAS,CAACU,SAAV,CAAoB,UAAAC,OAAO,EAAI;AAC7BR,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCO,OAArC,EAD6B,CAE7B;AACA;AACA;AACA;;AACA;;;;;;;AAOD,GAbD;AAcD;AAED,OAAO,SAASC,gBAAT,GAA4B;AACjCC,EAAAA,YAAY,CAACZ,iBAAb,CAA+B,UAASa,MAAT,EAAiB;AAC9C,QAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBC,MAAAA,SAAS,CAACC,aAAV,CAAwBC,KAAxB,CAA8Bf,IAA9B,CAAmC,UAASgB,YAAT,EAAuB;AACxDA,QAAAA,YAAY,CAACN,gBAAb,CAA8B,kBAA9B,EAAkD;AAChDO,UAAAA,IAAI,EAAE,aAD0C;AAEhDC,UAAAA,IAAI,EAAE,+CAF0C;AAGhDC,UAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAHuC;AAIhDC,UAAAA,GAAG,EAAE;AAJ2C,SAAlD;AAMD,OAPD;AAQD;AACF,GAXD;AAYD;AACD,OAAO,SAASC,6BAAT,GAAyC;AAC9C;AACA,MAAI,kBAAkBC,MAAtB,EAA8B;AAC5B,QACEX,YAAY,CAACY,UAAb,KAA4B,QAA5B,IACAZ,YAAY,CAACY,UAAb,KAA4B,SAF9B,EAGE;AACAZ,MAAAA,YAAY,CAACZ,iBAAb;AACD;AACF;AACF","sourcesContent":["import firebase from \"firebase\";\n\nexport function initNotif() {\n   const messaging = firebase.messaging();\n   messaging\n      .requestPermission()\n      .then(() => {\n         console.log(\"Permission granted: \", messaging.getToken())\n         return messaging.getToken();\n       })\n      .then(token => {\n         console.log(\"FCM Token:\", token);\n       })\n      .catch(error => {\n         if (error.code === \"messaging/permission-blocked\") {\n            console.log(\"Notifications blocked, please enable\");\n         } else {\n            console.log(\"Error\", error);\n         }\n        }); \n\n  messaging.onMessage(payload => {\n    console.log(\"Notification Received\", payload);\n    //this is the function that gets triggered when you receive a \n    //push notification while you’re on the page. So you can \n    //create a corresponding UI for you to have the push \n    //notification handled.\n    /*navigator.serviceWorker.ready.then(function(registration) {\n      registration.showNotification('Web-notis-firebase', {\n        body: 'Pontus är bäst!',\n        icon: '../logo.svg', \n        tag: 'Web-notis-test'\n      }); \n    });*/\n  });\n}\n\nexport function showNotification() {\n  Notification.requestPermission(function(result) {\n    if (result === 'granted') {\n      navigator.serviceWorker.ready.then(function(registration) {\n        registration.showNotification('Vibration Sample', {\n          body: 'Buzz! Buzz!',\n          icon: '../images/touch/chrome-touch-icon-192x192.png',\n          vibrate: [200, 100, 200, 100, 200, 100, 200],\n          tag: 'vibration-sample'\n        });\n      });\n    }\n  });\n}\nexport function requestNotificationPermission() {\n  // Some browsers don't support Notification yet. I'm looking at you iOS Safari\n  if (\"Notification\" in window) {\n    if (\n      Notification.permission !== \"denied\" &&\n      Notification.permission !== \"granted\"\n    ) {\n      Notification.requestPermission();\n    }\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}