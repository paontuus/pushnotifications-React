{"ast":null,"code":"import _classCallCheck from \"/Users/pontusmac/Documents/GitHub/pushnotifications-React/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pontusmac/Documents/GitHub/pushnotifications-React/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pontusmac/Documents/GitHub/pushnotifications-React/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pontusmac/Documents/GitHub/pushnotifications-React/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pontusmac/Documents/GitHub/pushnotifications-React/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pontusmac/Documents/GitHub/pushnotifications-React/src/initNotification.js\";\nimport firebase from \"firebase\";\nimport React, { Component } from 'react';\n\nvar InitNotification =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InitNotification, _React$Component);\n\n  function InitNotification() {\n    _classCallCheck(this, InitNotification);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InitNotification).apply(this, arguments));\n  }\n\n  _createClass(InitNotification, [{\n    key: \"render\",\n    value: function render() {\n      var messaging = firebase.messaging();\n      messaging.requestPermission().then(function () {\n        console.log(\"Permission granted: \", messaging.getToken());\n        return messaging.getToken();\n      }).then(function (token) {\n        console.log(\"FCM Token:\", token);\n      }).catch(function (error) {\n        if (error.code === \"messaging/permission-blocked\") {\n          console.log(\"Notifications blocked, please enable\");\n        } else {\n          console.log(\"Error\", error);\n        }\n      });\n      messaging.onMessage(function (payload) {\n        console.log(\"Notification Received\", payload); //this is the function that gets triggered when you receive a \n        //push notification while you’re on the page. So you can \n        //create a corresponding UI for you to have the push \n        //notification handled. \n\n        navigator.serviceWorker.ready.then(function (registration) {\n          registration.showNotification('Web-notis-firebase', {\n            body: 'Pontus är bäst!',\n            icon: '../logo.svg',\n            tag: 'Web-notis-test'\n          });\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return InitNotification;\n}(React.Component);\n\nmodule.exports = InitNotification;","map":{"version":3,"sources":["/Users/pontusmac/Documents/GitHub/pushnotifications-React/src/initNotification.js"],"names":["firebase","React","Component","InitNotification","messaging","requestPermission","then","console","log","getToken","token","catch","error","code","onMessage","payload","navigator","serviceWorker","ready","registration","showNotification","body","icon","tag","module","exports"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGMC,gB;;;;;;;;;;;;;6BACI;AAEN,UAAMC,SAAS,GAAGJ,QAAQ,CAACI,SAAT,EAAlB;AAEAA,MAAAA,SAAS,CACLC,iBADJ,GAEIC,IAFJ,CAES,YAAM;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,SAAS,CAACK,QAAV,EAApC;AACA,eAAOL,SAAS,CAACK,QAAV,EAAP;AACD,OALL,EAMIH,IANJ,CAMS,UAAAI,KAAK,EAAI;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,KAA1B;AACD,OARL,EASIC,KATJ,CASU,UAAAC,KAAK,EAAI;AACb,YAAIA,KAAK,CAACC,IAAN,KAAe,8BAAnB,EAAmD;AAChDN,UAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACF,SAFD,MAEO;AACJD,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,KAArB;AACF;AACD,OAfN;AAiBAR,MAAAA,SAAS,CAACU,SAAV,CAAoB,UAAAC,OAAO,EAAI;AAC9BR,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCO,OAArC,EAD8B,CAE9B;AACA;AACA;AACA;;AACAC,QAAAA,SAAS,CAACC,aAAV,CAAwBC,KAAxB,CAA8BZ,IAA9B,CAAmC,UAASa,YAAT,EAAuB;AACxDA,UAAAA,YAAY,CAACC,gBAAb,CAA8B,oBAA9B,EAAoD;AAClDC,YAAAA,IAAI,EAAE,iBAD4C;AAElDC,YAAAA,IAAI,EAAE,aAF4C;AAGlDC,YAAAA,GAAG,EAAE;AAH6C,WAApD;AAKD,SAND;AAOD,OAbA;AAcD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;;;EArC4BtB,KAAK,CAACC,S;;AAwCrCsB,MAAM,CAACC,OAAP,GAAiBtB,gBAAjB","sourcesContent":["import firebase from \"firebase\";\nimport React, { Component } from 'react';\n\n\nclass InitNotification extends React.Component{  \n  render(){\n\n    const messaging = firebase.messaging();\n\n    messaging\n       .requestPermission()\n       .then(() => {\n          console.log(\"Permission granted: \", messaging.getToken())\n          return messaging.getToken();\n        })\n       .then(token => {\n          console.log(\"FCM Token:\", token);\n        })\n       .catch(error => {\n          if (error.code === \"messaging/permission-blocked\") {\n             console.log(\"Notifications blocked, please enable\");\n          } else {\n             console.log(\"Error\", error);\n          }\n         }); \n \n    messaging.onMessage(payload => {\n     console.log(\"Notification Received\", payload);\n     //this is the function that gets triggered when you receive a \n     //push notification while you’re on the page. So you can \n     //create a corresponding UI for you to have the push \n     //notification handled. \n     navigator.serviceWorker.ready.then(function(registration) {\n       registration.showNotification('Web-notis-firebase', {\n         body: 'Pontus är bäst!',\n         icon: '../logo.svg', \n         tag: 'Web-notis-test'\n       }); \n     });\n   });\n   return <div></div>;\n  } \n}\n\nmodule.exports = InitNotification;\n\n\n"]},"metadata":{},"sourceType":"module"}