{"ast":null,"code":"import firebase from \"firebase\";\nimport { config } from \"../push/firebaseConfig.js\";\nexport function InitNotification() {\n  firebase.initializeApp(config);\n\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('../firebaseMessagingServiceWorker.js').then(function (registration) {\n      console.log('Registration successful, scope is:', registration.scope);\n    }).catch(function (err) {\n      console.log('Service worker registration failed, error:', err);\n    });\n  }\n\n  var messaging = firebase.messaging();\n  messaging.requestPermission().then(function () {\n    console.log(\"Permission granted: \", messaging.getToken());\n    return messaging.getToken();\n  }).then(function (token) {\n    console.log(\"FCM Token:\", token);\n  }).catch(function (error) {\n    if (error.code === \"messaging/permission-blocked\") {\n      console.log(\"Notifications blocked, please enable\");\n    } else {\n      console.log(\"Error\", error);\n    }\n  });\n  messaging.onMessage(function (payload) {\n    console.log(\"Notification Received\", payload);\n    /*\n    this is the function that gets triggered when you receive a \n    push notification while you are on the page. Add more functionality or another UI.\n    */\n\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.showNotification('Web-notis-firebase', {\n        body: 'Web-notis-test',\n        icon: '',\n        tag: 'Web-notis-test'\n      });\n    });\n  });\n}","map":{"version":3,"sources":["/Users/pontusmac/Documents/GitHub/pushnotifications-React/Example/src/utils/initNotification.js"],"names":["firebase","config","InitNotification","initializeApp","navigator","serviceWorker","register","then","registration","console","log","scope","catch","err","messaging","requestPermission","getToken","token","error","code","onMessage","payload","ready","showNotification","body","icon","tag"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AAEA,OAAO,SAASC,gBAAT,GAA2B;AAE9BF,EAAAA,QAAQ,CAACG,aAAT,CAAuBF,MAAvB;;AAEA,MAAI,mBAAmBG,SAAvB,EAAkC;AAChCA,IAAAA,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiC,sCAAjC,EACCC,IADD,CACM,UAASC,YAAT,EAAuB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDF,YAAY,CAACG,KAA/D;AACD,KAHD,EAGGC,KAHH,CAGS,UAASC,GAAT,EAAc;AACrBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DG,GAA1D;AACD,KALD;AAMD;;AAED,MAAMC,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEAA,EAAAA,SAAS,CACLC,iBADJ,GAEIR,IAFJ,CAES,YAAM;AACTE,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCI,SAAS,CAACE,QAAV,EAApC;AACA,WAAOF,SAAS,CAACE,QAAV,EAAP;AACD,GALL,EAMIT,IANJ,CAMS,UAAAU,KAAK,EAAI;AACZR,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BO,KAA1B;AACD,GARL,EASIL,KATJ,CASU,UAAAM,KAAK,EAAI;AACb,QAAIA,KAAK,CAACC,IAAN,KAAe,8BAAnB,EAAmD;AAChDV,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACF,KAFD,MAEO;AACJD,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB;AACF;AACD,GAfN;AAiBAJ,EAAAA,SAAS,CAACM,SAAV,CAAoB,UAAAC,OAAO,EAAI;AAC7BZ,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCW,OAArC;AACD;;;;;AAICjB,IAAAA,SAAS,CAACC,aAAV,CAAwBiB,KAAxB,CAA8Bf,IAA9B,CAAmC,UAASC,YAAT,EAAuB;AACxDA,MAAAA,YAAY,CAACe,gBAAb,CAA8B,oBAA9B,EAAoD;AAClDC,QAAAA,IAAI,EAAE,gBAD4C;AAElDC,QAAAA,IAAI,EAAE,EAF4C;AAGlDC,QAAAA,GAAG,EAAE;AAH6C,OAApD;AAKD,KAND;AAOD,GAbD;AAeH","sourcesContent":["import firebase from \"firebase\";\nimport { config } from \"../push/firebaseConfig.js\";\n\nexport function InitNotification(){ \n\n    firebase.initializeApp(config);\n\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('../firebaseMessagingServiceWorker.js')\n      .then(function(registration) {\n        console.log('Registration successful, scope is:', registration.scope);\n      }).catch(function(err) {\n        console.log('Service worker registration failed, error:', err);\n      });\n    }\n\n    const messaging = firebase.messaging();\n\n    messaging\n       .requestPermission()\n       .then(() => {\n          console.log(\"Permission granted: \", messaging.getToken())\n          return messaging.getToken();\n        })\n       .then(token => {\n          console.log(\"FCM Token:\", token);\n        })\n       .catch(error => {\n          if (error.code === \"messaging/permission-blocked\") {\n             console.log(\"Notifications blocked, please enable\");\n          } else {\n             console.log(\"Error\", error);\n          }\n         }); \n \n    messaging.onMessage(payload => {\n      console.log(\"Notification Received\", payload);\n     /*\n     this is the function that gets triggered when you receive a \n     push notification while you are on the page. Add more functionality or another UI.\n     */ \n      navigator.serviceWorker.ready.then(function(registration) {\n        registration.showNotification('Web-notis-firebase', {\n          body: 'Web-notis-test',\n          icon: '', \n          tag: 'Web-notis-test' \n        }); \n      });\n    });\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}